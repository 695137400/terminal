import { TerminalTabComponent } from 'terminus-terminal';
export declare class TerminusHtermScrollbar extends HTMLElement {
    private shadow;
    private connected;
    private terminal;
    private terminalSubscriptions;
    private frame;
    private screen;
    private track;
    private handle;
    private lastScrollTop;
    private lastScrollHeight;
    private moveHandler;
    private nextScrollY;
    private scrollIsDebounced;
    private renderIsDebounced;
    private renderIsDesired;
    private desiredHandlePosition;
    private desiredHandlePercent;
    private alternateScreenActive;
    constructor();
    connectedCallback(): void;
    disconnectedCallback(): void;
    attachToTerminal(terminal: TerminalTabComponent): void;
    detachFromTerminal(): void;
    onTerminalUpdate: () => void;
    onAlternateScreenChange: (isActive: boolean) => void;
    render(): void;
    handleDebouncedRender: () => void;
    moveHandleToPercent(percent: number): void;
    moveHandleToPosition(position: number): void;
    getAvailableScrollSpace(): number;
    determineNewScrollPercentFromHandle(): number;
    scrollTerminal(newY: any): void;
    handleDebouncedScroll: () => void;
    scrollTerminalToPercent(percent: number): void;
    getCurrentTerminalScrollPercent(): number;
    getTerminalScrollableAmount(): number;
    terminalNeedsScrollbar(): boolean;
    fadeIn(): void;
    fadeOut(): void;
    onTrackClick: (click: MouseEvent) => void;
    onHandleMouseDown: (mouseDown: MouseEvent) => void;
    onHandleMouseMove: (startingMouseY: number) => Function;
    onMouseUp: (mouseUp: MouseEvent) => void;
    handleInternalScroll: () => void;
}
