import { DomSanitizer, SafeHtml } from '@angular/platform-browser';
import { NgbModal } from '@ng-bootstrap/ng-bootstrap';
import { ElectronService } from '../services/electron.service';
import { HostAppService, Platform } from '../services/hostApp.service';
import { HotkeysService } from '../services/hotkeys.service';
import { LogService } from '../services/log.service';
import { ConfigService } from '../services/config.service';
import { DockingService } from '../services/docking.service';
import { TabRecoveryService } from '../services/tabRecovery.service';
import { ThemesService } from '../services/themes.service';
import { UpdaterService } from '../services/updater.service';
import { TouchbarService } from '../services/touchbar.service';
import { BaseTabComponent } from './baseTab.component';
import { AppService, IToolbarButton, ToolbarButtonProvider } from '../api';
export declare class AppRootComponent {
    private docking;
    private electron;
    private tabRecovery;
    private hotkeys;
    private updater;
    private touchbar;
    hostApp: HostAppService;
    config: ConfigService;
    app: AppService;
    private toolbarButtonProviders;
    Platform: typeof Platform;
    ready: boolean;
    leftToolbarButtons: IToolbarButton[];
    rightToolbarButtons: IToolbarButton[];
    platformClassWindows: boolean;
    platformClassMacOS: boolean;
    platformClassLinux: boolean;
    noTabs: boolean;
    tabsDragging: boolean;
    unsortedTabs: BaseTabComponent[];
    updateIcon: SafeHtml;
    private logger;
    private appUpdate;
    constructor(docking: DockingService, electron: ElectronService, tabRecovery: TabRecoveryService, hotkeys: HotkeysService, updater: UpdaterService, touchbar: TouchbarService, hostApp: HostAppService, config: ConfigService, app: AppService, toolbarButtonProviders: ToolbarButtonProvider[], log: LogService, ngbModal: NgbModal, domSanitizer: DomSanitizer, _themes: ThemesService);
    onGlobalHotkey(): void;
    presentWindow(): void;
    hideWindow(): void;
    ngOnInit(): Promise<void>;
    onDragOver(): boolean;
    onDrop(): boolean;
    updateApp(): void;
    onTabDragStart(): void;
    onTabDragEnd(): void;
    private getToolbarButtons;
    private updateVibrancy;
}
